apiVersion: v1
kind: Namespace
metadata:
  name: a2a-agent
---
apiVersion: v1
kind: Secret
metadata:
  name: a2a-agent-app
  namespace: a2a-agent
type: Opaque
stringData:
  GOOGLE_API_KEY: "________________________________"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-agent-app
  name: a2a-agent-app
  namespace: a2a-agent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: a2a-agent-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: a2a-agent-app
    spec:
      containers:
      - envFrom:
          - secretRef:
              name: a2a-agent-app
        env:
        - name: AGENT_URL
          value: "https://a2a-agent-app.monitoring.annd2.pro/"
        image: ghcr.io/anngdinh/langgraph-agent-app:latest
        imagePullPolicy: Always
        name: a2a-agent-app
        ports:
        - containerPort: 10000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /.well-known/agent.json
            port: 10000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /.well-known/agent.json
            port: 10000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: a2a-agent-app
  name: a2a-agent-app
  namespace: a2a-agent
spec:
  ports:
  - port: 10000
    protocol: TCP
    targetPort: 10000
  selector:
    app: a2a-agent-app
  sessionAffinity: None
  type: ClusterIP
---
# htpasswd -B -c auth username
# kubectl create secret generic basic-auth  --from-file=auth
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # nginx.ingress.kubernetes.io/auth-realm: Restricted Access
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/limit-burst-multiplier: "3"
    # nginx.ingress.kubernetes.io/limit-connections: "5"
    # nginx.ingress.kubernetes.io/limit-rps: "1"
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: cluster-letsencrypt-prod
  name: a2a-agent-app
  namespace: a2a-agent
spec:
  ingressClassName: nginx
  rules:
  - host: a2a-agent-app.monitoring.annd2.pro
    http:
      paths:
      - backend:
          service:
            name: a2a-agent-app
            port:
              number: 10000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - a2a-agent-app.monitoring.annd2.pro
    secretName: a2a-agent-app.monitoring.annd2.pro

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: a2a-agent-ui
  name: a2a-agent-ui
  namespace: a2a-agent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: a2a-agent-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: a2a-agent-ui
    spec:
      containers:
      - image: ghcr.io/anngdinh/langgraph-agent-ui:latest
        imagePullPolicy: Always
        name: a2a-agent-ui
        ports:
        - containerPort: 8501
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: a2a-agent-ui
  name: a2a-agent-ui
  namespace: a2a-agent
spec:
  ports:
  - port: 8501
    protocol: TCP
    targetPort: 8501
  selector:
    app: a2a-agent-ui
  sessionAffinity: None
  type: ClusterIP
---
# htpasswd -B -c auth username
# kubectl create secret generic basic-auth  --from-file=auth
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # nginx.ingress.kubernetes.io/auth-realm: Restricted Access
    # nginx.ingress.kubernetes.io/auth-secret: basic-auth
    # nginx.ingress.kubernetes.io/auth-type: basic
    # nginx.ingress.kubernetes.io/limit-burst-multiplier: "3"
    # nginx.ingress.kubernetes.io/limit-connections: "5"
    # nginx.ingress.kubernetes.io/limit-rps: "1"
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/cluster-issuer: cluster-letsencrypt-prod
  name: a2a-agent-ui
  namespace: a2a-agent
spec:
  ingressClassName: nginx
  rules:
  - host: a2a-agent-ui.monitoring.annd2.pro
    http:
      paths:
      - backend:
          service:
            name: a2a-agent-ui
            port:
              number: 8501
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - a2a-agent-ui.monitoring.annd2.pro
    secretName: a2a-agent-ui.monitoring.annd2.pro